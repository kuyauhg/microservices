server:
  port: 8080

spring:
  application:
    name: hm-gateway-service
  profiles:
    active: local
  main:
    allow-bean-definition-overriding: true
  cloud:
    nacos:
      discovery:
        server-addr: ${hm.nacos.addr:127.0.0.1:8848}
        namespace: ${hm.nacos.namespace:dev}
      config:
        server-addr: ${hm.nacos.addr:127.0.0.1:8848}
        namespace: ${hm.nacos.namespace:dev}
        file-extension: yaml
    gateway:
      # 全局CORS配置
      globalcors:
        cors-configurations:
          '[/**]':
            allowed-origins: "*"
            allowed-methods: "*"
            allowed-headers: "*"
            allow-credentials: true
            max-age: 3600
      # 路由配置
      routes:
        # 用户服务路由
        - id: hm-user-service
          uri: lb://hm-user-service
          predicates:
            - Path=/users/**,/addresses/**
          filters:
            - StripPrefix=0
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
                key-resolver: "#{@ipKeyResolver}"
        
        # 商品服务路由
        - id: hm-product-service
          uri: lb://hm-product-service
          predicates:
            - Path=/items/**
          filters:
            - StripPrefix=0
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 20
                redis-rate-limiter.burstCapacity: 40
                redis-rate-limiter.requestedTokens: 1
                key-resolver: "#{@ipKeyResolver}"
        
        # 购物车服务路由
        - id: hm-cart-service
          uri: lb://hm-cart-service
          predicates:
            - Path=/carts/**
          filters:
            - StripPrefix=0
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 15
                redis-rate-limiter.burstCapacity: 30
                redis-rate-limiter.requestedTokens: 1
                key-resolver: "#{@ipKeyResolver}"
        
        # 交易服务路由
        - id: hm-trade-service
          uri: lb://hm-trade-service
          predicates:
            - Path=/orders/**
          filters:
            - StripPrefix=0
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
                key-resolver: "#{@ipKeyResolver}"
        
        # 支付服务路由
        - id: hm-pay-service
          uri: lb://hm-pay-service
          predicates:
            - Path=/pay-orders/**
          filters:
            - StripPrefix=0
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
                redis-rate-limiter.requestedTokens: 1
                key-resolver: "#{@ipKeyResolver}"
      
      # 默认过滤器
      default-filters:
        - name: Retry
          args:
            retries: 3
            statuses: BAD_GATEWAY,GATEWAY_TIMEOUT
            methods: GET,POST
            backoff:
              firstBackoff: 10ms
              maxBackoff: 50ms
              factor: 2
              basedOnPreviousValue: false
  
  # Redis配置（用于限流）
  redis:
    host: ${hm.redis.host:127.0.0.1}
    port: ${hm.redis.port:6379}
    password: ${hm.redis.password:}
    database: 0
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms

# 日志配置
logging:
  level:
    com.hmall.gateway: debug
    org.springframework.cloud.gateway: debug
  pattern:
    dateformat: HH:mm:ss:SSS
  file:
    path: "logs/${spring.application.name}"

# 监控端点配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,gateway,metrics,prometheus
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# JWT配置
hm:
  jwt:
    location: classpath:hmall.jks
    alias: hmall
    password: hmall123
    tokenTTL: 30m
  auth:
    excludePaths:
      - /users/login
      - /users/register
      - /items/**
      - /actuator/**
      - /doc.html
      - /webjars/**
      - /swagger-resources/**
      - /v2/api-docs/**
